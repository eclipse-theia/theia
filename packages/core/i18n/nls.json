{
  "terminal:new:profile": "Create New Integrated Terminal from a Profile",
  "terminal:profile:default": "Choose the default Terminal Profile",
  "theia": {
    "callhierarchy": {
      "noCallers": "No callers have been detected.",
      "open": "Open Call Hierarchy"
    },
    "core": {
      "about": {
        "compatibility": "{0} Compatibility",
        "defaultApi": "Default {0} API",
        "version": "Version"
      },
      "common": {
        "closeAll": "Close All Tabs",
        "closeAllTabMain": "Close All Tabs in Main Area",
        "closeOtherTabMain": "Close Other Tabs in Main Area",
        "closeOthers": "Close Other Tabs",
        "closeRight": "Close Tabs to the Right",
        "closeTab": "Close Tab",
        "closeTabMain": "Close Tab in Main Area",
        "collapseAllTabs": "Collapse All Side Panels",
        "collapseBottomPanel": "Toggle Bottom Panel",
        "collapseTab": "Collapse Side Panel",
        "showNextTabGroup": "Switch to Next Tab Group",
        "showNextTabInGroup": "Switch to Next Tab in Group",
        "showPreviousTabGroup": "Switch to Previous Tab Group",
        "showPreviousTabInGroup": "Switch to Previous Tab in Group",
        "toggleMaximized": "Toggle Maximized"
      },
      "enhancedPreview": "Controls whether more information about the tab should be displayed in horizontal tab bars.",
      "file": {
        "browse": "Browse"
      },
      "highlightModifiedTabs": "Controls whether a top border is drawn on modified (dirty) editor tabs or not.",
      "keybindingStatus": "{0} was pressed, waiting for more keys",
      "keyboard": {
        "choose": "Choose Keyboard Layout",
        "chooseLayout": "Choose a keyboard layout",
        "current": "(current: {0})",
        "currentLayout": " - current layout",
        "mac": "Mac Keyboards",
        "pc": "PC Keyboards",
        "tryDetect": "Try to detect the keyboard layout from browser information and pressed keys."
      },
      "offline": "Offline",
      "quitMessage": "Any unsaved changes will not be saved.",
      "resetWorkbenchLayout": "Reset Workbench Layout",
      "searchbox": {
        "close": "Close (Escape)",
        "next": "Next (Down)",
        "previous": "Previous (Up)"
      },
      "silentNotifications": "Controls whether to suppress notification popups.",
      "tabDefaultSize": "Specifies the default size for tabs.",
      "tabMaximize": "Controls whether to maximize tabs on double click.",
      "tabMinimumSize": "Specifies the minimum size for tabs.",
      "tabShrinkToFit": "Shrink tabs to fit available space."
    },
    "debug": {
      "addConfigurationPlaceholder": "Select workspace root to add configuration to",
      "compound-cycle": "Launch configuration '{0}' contains a cycle with itself",
      "continueAll": "Continue All",
      "copyExpressionValue": "Copy Expression Value",
      "debugVariableInput": "Set {0} Value",
      "instruction-breakpoint": "Instruction Breakpoint",
      "missingConfiguration": "Dynamic configuration '{0}:{1}' is missing or not applicable",
      "pauseAll": "Pause All",
      "reveal": "Reveal",
      "threads": "Threads",
      "toggleTracing": "Enable/disable tracing communications with debug adapters"
    },
    "editor": {
      "diffEditor.diffAlgorithm.experimental": "Uses an experimental diffing algorithm.",
      "diffEditor.diffAlgorithm.smart": "Uses the default diffing algorithm.",
      "dirtyEncoding": "The file is dirty. Please save it first before reopening it with another encoding.",
      "editor.codeActionWidget.showHeaders": "Enable/disable showing group headers in the code action menu.",
      "editor.formatOnSaveMode.modificationsIfAvailable": "Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted.",
      "editor.inlayHints.enabled1": "Inlay hints are showing by default and hide when holding Ctrl+Alt",
      "editor.inlayHints.enabled2": "Inlay hints are hidden by default and show when holding Ctrl+Alt",
      "editor.quickSuggestions": "Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the '#editor.suggestOnTriggerCharacters#'-setting which controls if suggestions are triggered by special characters.",
      "editor.stickyScroll.maxLineCount": "Defines the maximum number of sticky lines to show.",
      "editor.suggest.matchOnWordStartOnly": "When enabled IntelliSense filtering requires that the first character matches on a word start, e.g `c` on `Console` or `WebContext` but _not_ on `description`. When disabled IntelliSense will show more results but still sorts them by match quality.",
      "files.autoSave": "Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.",
      "files.autoSave.afterDelay": "An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`.",
      "files.autoSave.off": "An editor with changes is never automatically saved.",
      "files.autoSave.onFocusChange": "An editor with changes is automatically saved when the editor loses focus.",
      "files.autoSave.onWindowChange": "An editor with changes is automatically saved when the window loses focus.",
      "formatOnSaveTimeout": "Timeout in milliseconds after which the formatting that is run on file save is cancelled.",
      "persistClosedEditors": "Controls whether to persist closed editor history for the workspace across window reloads.",
      "showAllEditors": "Show All Opened Editors",
      "splitHorizontal": "Split Editor Horizontal",
      "splitVertical": "Split Editor Vertical",
      "toggleStickyScroll": "Toggle Sticky Scroll"
    },
    "file-search": {
      "toggleIgnoredFiles": " (Press {0} to show/hide ignored files)"
    },
    "fileDialog": {
      "showHidden": "Show hidden files"
    },
    "fileSystem": {
      "fileResource": {
        "overWriteBody": "Do you want to overwrite the changes made to '{0}' on the file system?"
      }
    },
    "filesystem": {
      "copyDownloadLink": "Copy Download Link",
      "dialog": {
        "initialLocation": "Go To Initial Location",
        "multipleItemMessage": "You can select only one item",
        "name": "Name:",
        "navigateBack": "Navigate Back",
        "navigateForward": "Navigate Forward",
        "navigateUp": "Navigate Up One Directory"
      },
      "fileResource": {
        "binaryFileQuery": "Opening it might take some time and might make the IDE unresponsive. Do you want to open '{0}' anyway?",
        "binaryTitle": "The file is either binary or uses an unsupported text encoding.",
        "largeFileTitle": "The file is too large ({0}).",
        "overwriteTitle": "The file '{0}' has been changed on the file system."
      },
      "filesExclude": "Configure glob patterns for excluding files and folders. For example, the file Explorer decides which files and folders to show or hide based on this setting.",
      "format": "Format:",
      "maxConcurrentUploads": "Maximum number of concurrent files to upload when uploading multiple files. 0 means all files will be uploaded concurrently.",
      "maxFileSizeMB": "Controls the max file size in MB which is possible to open.",
      "prepareDownload": "Preparing download...",
      "prepareDownloadLink": "Preparing download link...",
      "processedOutOf": "Processed {0} out of {1}",
      "replaceTitle": "Replace File",
      "uploadFiles": "Upload Files...",
      "uploadedOutOf": "Uploaded {0} out of {1}"
    },
    "getting-started": {
      "apiComparator": "{0} API Compatibility",
      "newExtension": "Building a New Extension",
      "newPlugin": "Building a New Plugin"
    },
    "git": {
      "aFewSecondsAgo": "a few seconds ago",
      "addSignedOff": "Add Signed-off-by",
      "amendReuseMessag": "To reuse the last commit message, press 'Enter' or 'Escape' to cancel.",
      "amendRewrite": "Rewrite previous commit message. Press 'Enter' to confirm or 'Escape' to cancel.",
      "checkoutCreateLocalBranchWithName": "Create a new local branch with name: {0}. Press 'Enter' to confirm or 'Escape' to cancel.",
      "checkoutProvideBranchName": "Please provide a branch name. ",
      "checkoutSelectRef": "Select a ref to checkout or create a new local branch:",
      "cloneQuickInputLabel": "Please provide a Git repository location. Press 'Enter' to confirm or 'Escape' to cancel.",
      "cloneRepository": "Clone the Git repository: {0}. Press 'Enter' to confirm or 'Escape' to cancel.",
      "compareWith": "Compare With...",
      "compareWithBranchOrTag": "Pick a branch or tag to compare with the currently active {0} branch:",
      "diff": "Diff",
      "dirtyDiffLinesLimit": "Do not show dirty diff decorations, if editor's line count exceeds this limit.",
      "dropStashMessage": "Stash successfully removed.",
      "editorDecorationsEnabled": "Show git decorations in the editor.",
      "fetchPickRemote": "Pick a remote to fetch from:",
      "gitDecorationsColors": "Use color decoration in the navigator.",
      "mergeQuickPickPlaceholder": "Pick a branch to merge into the currently active {0} branch:",
      "missingUserInfo": "Make sure you configure your 'user.name' and 'user.email' in git.",
      "noPreviousCommit": "No previous commit to amend",
      "noRepositoriesSelected": "No repositories were selected.",
      "repositoryNotInitialized": "Repository {0} is not yet initialized.",
      "stashChanges": "Stash changes. Press 'Enter' to confirm or 'Escape' to cancel.",
      "stashChangesWithMessage": "Stash changes with message: {0}. Press 'Enter' to confirm or 'Escape' to cancel.",
      "toggleBlameAnnotations": "Toggle Blame Annotations"
    },
    "keybinding-schema-updater": {
      "deprecation": "Use `when` clause instead."
    },
    "keymaps": {
      "editKeybindingTitle": "Edit Keybinding for {0}",
      "keybindingCollidesValidation": "keybinding currently collides",
      "requiredKeybindingValidation": "keybinding value is required",
      "resetKeybindingConfirmation": "Do you really want to reset this keybinding to its default value?",
      "resetKeybindingTitle": "Reset keybinding for {0}",
      "resetMultipleKeybindingsWarning": "If multiple keybindings exist for this command, all of them will be reset."
    },
    "localize": {
      "offlineTooltip": "Cannot connect to backend."
    },
    "markers": {
      "clearAll": "Clear All",
      "noProblems": "No problems have been detected in the workspace so far.",
      "tabbarDecorationsEnabled": "Show problem decorators (diagnostic markers) in the tab bars."
    },
    "memory-inspector": {
      "addressTooltip": "Memory location to display, an address or expression evaluating to an address",
      "ascii": "ASCII",
      "binary": "Binary",
      "byteSize": "Byte Size",
      "bytesPerGroup": "Bytes Per Group",
      "closeSettings": "Close Settings",
      "columns": "Columns",
      "command": {
        "createNewMemory": "Create New Memory Inspector",
        "createNewRegisterView": "Create New Register View",
        "followPointer": "Follow Pointer",
        "followPointerMemory": "Follow Pointer in Memory Inspector",
        "resetValue": "Reset Value",
        "showRegister": "Show Register in Memory Inspector",
        "viewVariable": "Show Variable in Memory Inspector"
      },
      "data": "Data",
      "decimal": "Decimal",
      "diff": {
        "label": "Diff: {0}"
      },
      "diff-widget": {
        "offset-label": "{0} Offset",
        "offset-title": "Bytes to offset the memory from {0}"
      },
      "editable": {
        "apply": "Apply Changes",
        "clear": "Clear Changes"
      },
      "endianness": "Endianness",
      "extraColumn": "Extra Column",
      "groupsPerRow": "Groups Per Row",
      "hexadecimal": "Hexadecimal",
      "length": "Length",
      "lengthTooltip": "Number of bytes to fetch, in decimal or hexadecimal",
      "memory": {
        "addressField": {
          "memoryReadError": "Enter an address or expression in the Location field."
        },
        "freeze": "Freeze Memory View",
        "hideSettings": "Hide Settings Panel",
        "readError": {
          "bounds": "Memory bounds exceeded, result will be truncated.",
          "noContents": "No memory contents currently available."
        },
        "readLength": {
          "memoryReadError": "Enter a length (decimal or hexadecimal number) in the Length field."
        },
        "showSettings": "Show Settings Panel",
        "unfreeze": "Unfreeze Memory View",
        "userError": "There was an error fetching memory."
      },
      "memoryCategory": "Memory Inspector",
      "memoryInspector": "Memory Inspector",
      "memoryTitle": "Memory",
      "octal": "Octal",
      "offset": "Offset",
      "offsetTooltip": "Offset to be added to the current memory location, when navigating",
      "provider": {
        "localsError": "Cannot read local variables. No active debug session.",
        "readError": "Cannot read memory. No active debug session.",
        "writeError": "Cannot write memory. No active debug session."
      },
      "register": "Register",
      "register-widget": {
        "filter-placeholder": "Filter (starts with)"
      },
      "registerReadError": "There was an error fetching registers.",
      "registers": "Registers",
      "toggleComparisonWidgetVisibility": "Toggle Comparison Widget Visibility",
      "utils": {
        "afterBytes": "You must load memory in both widgets you would like to compare. {0} has no memory loaded.",
        "bytesMessage": "You must load memory in both widgets you would like to compare. {0} has no memory loaded."
      }
    },
    "messages": {
      "notificationTimeout": "Informative notifications will be hidden after this timeout.",
      "toggleNotifications": "Toggle Notifications"
    },
    "mini-browser": {
      "typeUrl": "Type a URL"
    },
    "monaco": {
      "noSymbolsMatching": "No symbols matching",
      "typeToSearchForSymbols": "Type to search for symbols"
    },
    "navigator": {
      "autoReveal": "Auto Reveal",
      "refresh": "Refresh in Explorer",
      "reveal": "Reveal in Explorer",
      "toggleHiddenFiles": "Toggle Hidden Files"
    },
    "output": {
      "clearOutputChannel": "Clear Output Channel...",
      "closeOutputChannel": "Close Output Channel...",
      "hiddenChannels": "Hidden Channels",
      "hideOutputChannel": "Hide Output Channel...",
      "maxChannelHistory": "The maximum number of entries in an output channel.",
      "showOutputChannel": "Show Output Channel..."
    },
    "plugin": {
      "blockNewTab": "Your browser prevented opening of a new tab"
    },
    "plugin-dev": {
      "alreadyRunning": "Hosted instance is already running.",
      "debugInstance": "Debug Instance",
      "debugMode": "Using inspect or inspect-brk for Node.js debug",
      "devHost": "Development Host",
      "failed": "Failed to run hosted plugin instance: {0}",
      "hostedPlugin": "Hosted Plugin",
      "hostedPluginRunning": "Hosted Plugin: Running",
      "hostedPluginStarting": "Hosted Plugin: Starting",
      "hostedPluginStopped": "Hosted Plugin: Stopped",
      "hostedPluginWatching": "Hosted Plugin: Watching",
      "instanceTerminated": "{0} has been terminated",
      "launchOutFiles": "Array of glob patterns for locating generated JavaScript files (`${pluginPath}` will be replaced by plugin actual path).",
      "noValidPlugin": "Specified folder does not contain valid plugin.",
      "notRunning": "Hosted instance is not running.",
      "pluginFolder": "Plugin folder is set to: {0}",
      "preventedNewTab": "Your browser prevented opening of a new tab",
      "restartInstance": "Restart Instance",
      "running": "Hosted instance is running at:",
      "select": "Select",
      "selectPath": "Select Path",
      "startInstance": "Start Instance",
      "starting": "Starting hosted instance server ...",
      "stopInstance": "Stop Instance",
      "unknownTerminated": "The instance has been terminated",
      "watchMode": "Run watcher on plugin under development"
    },
    "plugin-ext": {
      "plugins": "Plugins",
      "webviewTrace": "Controls communication tracing with webviews.",
      "webviewWarnIfUnsecure": "Warns users that webviews are currently deployed unsecurely."
    },
    "preview": {
      "openByDefault": "Open the preview instead of the editor by default."
    },
    "property-view": {
      "created": "Created",
      "directory": "Directory",
      "lastModified": "Last modified",
      "location": "Location",
      "noProperties": "No properties available.",
      "properties": "Properties",
      "size": "Size",
      "symbolicLink": "Symbolic link"
    },
    "scm": {
      "amend": "Amend",
      "amendHeadCommit": "HEAD Commit",
      "amendLastCommit": "Amend last commit",
      "changeRepository": "Change Repository...",
      "config.untrackedChanges": "Controls how untracked changes behave.",
      "config.untrackedChanges.hidden": "hidden",
      "config.untrackedChanges.mixed": "mixed",
      "config.untrackedChanges.separate": "separate",
      "history": "History",
      "noRepositoryFound": "No repository found",
      "unamend": "Unamend",
      "unamendCommit": "Unamend commit"
    },
    "search-in-workspace": {
      "includeIgnoredFiles": "Include Ignored Files",
      "noFolderSpecified": "You have not opened or specified a folder. Only open files are currently searched.",
      "resultSubset": "This is only a subset of all results. Use a more specific search term to narrow down the result list.",
      "searchOnEditorModification": "Search the active editor when modified."
    },
    "secondary-window": {
      "extract-widget": "Move View to Secondary Window"
    },
    "shell-area": {
      "secondary": "Secondary Window",
      "top": "Top"
    },
    "task": {
      "attachTask": "Attach Task...",
      "clearHistory": "Clear History",
      "noTaskToRun": "No task to run found. Configure Tasks...",
      "openUserTasks": "Open User Tasks"
    },
    "terminal": {
      "defaultProfile": "The default profile used on {0}",
      "enableCopy": "Enable ctrl-c (cmd-c on macOS) to copy selected text",
      "enablePaste": "Enable ctrl-v (cmd-v on macOS) to paste from clipboard",
      "profileArgs": "The shell arguments that this profile uses.",
      "profileColor": "A terminal theme color ID to associate with the terminal.",
      "profileDefault": "Choose Default Profile...",
      "profileIcon": "A codicon ID to associate with the terminal icon.\nterminal-tmux:\"$(terminal-tmux)\"",
      "profileNew": "New Terminal (With Profile)...",
      "profilePath": "The path of the shell that this profile uses.",
      "profileSource": "A profile source that will auto detect the paths to the shell. Note that non-standard executable locations are not supported and must be created manually in a new profile.",
      "profiles": "The profiles to present when creating a new terminal. Set the path property manually with optional args.\nSet an existing profile to `null` to hide the profile from the list, for example: `\"{0}\": null`.",
      "rendererType": "Controls how the terminal is rendered.",
      "selectProfile": "Select a profile for the new terminal",
      "shell.deprecated": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in 'terminal.integrated.profiles.{0}' and setting its profile name as the default in 'terminal.integrated.defaultProfile.{0}.'",
      "shellArgsLinux": "The command line arguments to use when on the Linux terminal.",
      "shellArgsOsx": "The command line arguments to use when on the macOS terminal.",
      "shellArgsWindows": "The command line arguments to use when on the Windows terminal.",
      "shellLinux": "The path of the shell that the terminal uses on Linux (default: '{0}'}).",
      "shellOsx": "The path of the shell that the terminal uses on macOS (default: '{0}'}).",
      "shellWindows": "The path of the shell that the terminal uses on Windows. (default: '{0}')."
    },
    "toolbar": {
      "addCommand": "Add Command to Toolbar",
      "addCommandPlaceholder": "Find a command to add to the toolbar",
      "centerColumn": "Center Column",
      "failedUpdate": "Failed to update the value of '{0}' in '{1}'.",
      "filterIcons": "Filter Icons",
      "iconSelectDialog": "Select an Icon for '{0}'",
      "iconSet": "Icon Set",
      "insertGroupLeft": "Insert Group Separator (Left)",
      "insertGroupRight": "Insert Group Separator (Right)",
      "leftColumn": "Left Column",
      "openJSON": "Customize Toolbar (Open JSON)",
      "removeCommand": "Remove Command From Toolbar",
      "restoreDefaults": "Restore Toolbar Defaults",
      "rightColumn": "Right Column",
      "selectIcon": "Select Icon",
      "toggleToolbar": "Toggle Toolbar",
      "toolbarLocationPlaceholder": "Where would you like the command added?",
      "useDefaultIcon": "Use Default Icon"
    },
    "typehierarchy": {
      "subtypeHierarchy": "Subtype Hierarchy",
      "supertypeHierarchy": "Supertype Hierarchy"
    },
    "vsx-registry": {
      "downloadCount": "Download count: {0}",
      "errorFetching": "Error fetching extensions.",
      "failedInstallingVSIX": "Failed to install {0} from VSIX.",
      "invalidVSIX": "The selected file is not a valid \"*.vsix\" plugin.",
      "license": "License: {0}",
      "recommendedExtensions": "A list of the names of extensions recommended for use in this workspace.",
      "searchPlaceholder": "Search Extensions in {0}",
      "showRecommendedExtensions": "Controls whether notifications are shown for extension recommendations.",
      "vsx-extensions-contribution": {
        "update-version-uninstall-error": "Error while removing the extension: {0}.",
        "update-version-version-error": "Failed to install version {0} of {1}."
      }
    },
    "webview": {
      "goToReadme": "Go To README",
      "messageWarning": "            The {0} endpoint's host pattern has been changed to `{1}`; changing the pattern can lead to security vulnerabilities.             See `{2}` for more information."
    },
    "workspace": {
      "compareWithEachOther": "Compare with Each Other",
      "confirmDeletePermanently.description": "Failed to delete \"{0}\" using the Trash. Do you want to permanently delete instead?",
      "confirmDeletePermanently.solution": "You can disable the use of Trash in the preferences.",
      "confirmDeletePermanently.title": "Error deleting file",
      "confirmMessage.delete": "Do you really want to delete the following files?",
      "confirmMessage.dirtyMultiple": "Do you really want to delete {0} files with unsaved changes?",
      "confirmMessage.dirtySingle": "Do you really want to delete {0} with unsaved changes?",
      "confirmMessage.uriMultiple": "Do you really want to delete all the {0} selected files?",
      "confirmMessage.uriSingle": "Do you really want to delete {0}?",
      "duplicate": "Duplicate",
      "failApply": "Could not apply changes to new file",
      "failSaveAs": "Cannot run \"{0}\" for the current widget.",
      "newFilePlaceholder": "File Name",
      "newFolderPlaceholder": "Folder Name",
      "noErasure": "Note: Nothing will be erased from disk",
      "openRecentPlaceholder": "Type the name of the workspace you want to open",
      "openRecentWorkspace": "Open Recent Workspace...",
      "preserveWindow": "Enable opening workspaces in current window.",
      "removeFolder": "Are you sure you want to remove the following folder from the workspace?",
      "removeFolders": "Are you sure you want to remove the following folders from the workspace?",
      "trashTitle": "Move {0} to Trash",
      "trustEmptyWindow": "Controls whether or not the empty workspace is trusted by default.",
      "trustEnabled": "Controls whether or not workspace trust is enabled. If disabled, all workspaces are trusted.",
      "trustRequest": "An extension requests workspace trust but the corresponding API is not yet fully supported. Do you want to trust this workspace?",
      "untitled-cleanup": "There appear to be many untitled workspace files. Please check {0} and remove any unused files.",
      "workspaceFolderAdded": "A workspace with multiple roots was created. Do you want to save your workspace configuration as a file?",
      "workspaceFolderAddedTitle": "Folder added to Workspace"
    }
  }
}
