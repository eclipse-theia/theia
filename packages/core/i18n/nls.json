{
  "ai-chat-ui.show-settings": "Show AI Settings",
  "aiConfiguration:open": "Open AI Configuration view",
  "aiHistory:clear": "AI History: Clear History",
  "aiHistory:open": "Open AI History view",
  "aiHistory:sortChronologically": "AI History: Sort chronologically",
  "aiHistory:sortReverseChronologically": "AI History: Sort reverse chronologically",
  "debug.breakpoint.editCondition": "Edit Condition...",
  "notebook.cell.changeToCode": "Change Cell to Code",
  "notebook.cell.changeToMarkdown": "Change Cell to Markdown",
  "notebook.cell.insertMarkdownCellAbove": "Insert Markdown Cell Above",
  "notebook.cell.insertMarkdownCellBelow": "Insert Markdown Cell Below",
  "terminal:new:profile": "Create New Integrated Terminal from a Profile",
  "terminal:profile:default": "Choose the default Terminal Profile",
  "theia": {
    "ai": {
      "agents": {
        "enable": {
          "mdDescription": "Specifies whether the agent should be enabled (true) or disabled (false).",
          "title": "Enable Agent"
        },
        "languageModelRequirements": {
          "identifier": {
            "mdDescription": "The identifier of the language model to be used.",
            "title": "Identifier"
          },
          "mdDescription": "Specifies the used language models for this agent.",
          "purpose": {
            "mdDescription": "The purpose for which this language model is used.",
            "title": "Purpose"
          },
          "title": "Language Model Requirements"
        },
        "mdDescription": "Configure agent settings such as enabling or disabling specific agents, configuring prompts and         selecting LLMs.",
        "selectedVariants": {
          "mdDescription": "Specifies the currently selected prompt variants for this agent.",
          "title": "Selected Variants"
        },
        "title": "Agent Settings"
      },
      "anthropic": {
        "apiKey": {
          "description": "Enter an API Key of your official Anthropic Account. **Please note:** By using this preference the Anthropic API key will be stored in clear text            on the machine running Theia. Use the environment variable `ANTHROPIC_API_KEY` to set the key securely."
        },
        "models": {
          "description": "Official Anthropic models to use"
        }
      },
      "chat": {
        "defaultAgent": {
          "description": "Optional: <agent-name> of the Chat Agent that shall be invoked, if no agent is explicitly mentioned with @<agent-name> in the user query. If no Default Agent is configured, Theia¬¥s defaults will be applied."
        },
        "pinChatAgent": {
          "description": "Enable agent pinning to automatically keep a mentioned chat agent active across prompts, reducing the need for repeated mentions.You can manually unpin or switch agents anytime."
        },
        "view": {
          "label": "AI Chat"
        }
      },
      "chat-ui": {
        "addContextVariable": "Add context variable",
        "applyAll": "Apply All",
        "applyAllTitle": "Apply all pending changes",
        "attachToContext": "Attach elements to context",
        "cancel": "Cancel (Esc)",
        "chat-view-tree-widget": {
          "ai": "AI",
          "aiConfigurationView": "AI Configuration View",
          "aiFeatureHeader": "üöÄ AI Features Available (Alpha Version)!",
          "aiFeaturesEnable": "Ai-features: Enable",
          "aiHistoryView": "AI History View",
          "featuresDisabled": "Currently, all AI Features are disabled!",
          "howToEnable": "How to Enable the AI Features:",
          "noRenderer": "Error: No renderer found",
          "settingsMenu": "the settings menu",
          "waitingForInput": "Waiting for input",
          "you": "You"
        },
        "code-part-renderer": {
          "generatedCode": "Generated Code"
        },
        "copyCodeBlock": "Copy Code Block",
        "deleteChangeSet": "Delete Change Set",
        "enterChatName": "Enter chat name",
        "errorChatInvocation": "An error occurred during chat service invocation.",
        "openDiff": "Open Diff",
        "openOriginalFile": "Open Original File",
        "pinAgent": "Pin Agent",
        "removeChat": "Remove Chat",
        "renameChat": "Rename Chat",
        "selectChat": "Select chat",
        "selectVariableArguments": "Select variable arguments",
        "send": "Send (Enter)",
        "text-part-renderer": {
          "cantDisplay": "Can't display response, please check your ChatResponsePartRenderers!"
        },
        "thinking-part-renderer": {
          "thinking": "Thinking"
        },
        "toolcall-part-renderer": {
          "finished": "Ran",
          "prettyPrintError": "The content could not be converted to string: '{0}'. This is the original content: '{1}'."
        },
        "unpinAgent": "Unpin Agent"
      },
      "code-completion": {
        "progressText": "Calculating AI code completion..."
      },
      "completion": {
        "agent": {
          "description": "This agent provides inline code completion in the code editor in the Theia IDE."
        },
        "automaticEnable": {
          "description": "Automatically trigger AI completions inline within any (Monaco) editor while editing.            \n            Alternatively, you can manually trigger the code via the command \"Trigger Inline Suggestion\" or the default shortcut \"Ctrl+Alt+Space\"."
        },
        "excludedFileExts": {
          "description": "Specify file extensions (e.g., .md, .txt) where AI completions should be disabled.",
          "title": "Excluded File Extensions"
        },
        "maxContextLines": {
          "description": "The maximum number of lines used as context, distributed among the lines before and after the cursor position (prefix and suffix).            Set this to -1 to use the full file as context without any line limit and 0 to only use the current line.",
          "title": "Maximum Context Lines"
        },
        "stripBackticks": {
          "description": "Remove surrounding backticks from the code returned by some LLMs. If a backtick is detected, all content after the closing             backtick is stripped as well. This setting helps ensure plain code is returned when language models use markdown-like formatting.",
          "title": "Strip Backticks from Inline Completions"
        }
      },
      "core": {
        "agentConfiguration": {
          "addCustomAgent": "Add Custom Agent",
          "description": "Description:",
          "enableAgent": "Enable Agent",
          "label": "Agents",
          "name": "Name:",
          "noDefaultTemplate": "No default template available",
          "notUsedInPrompt": "Not used in prompt",
          "promptTemplates": "Prompt Templates",
          "selectAgentMessage": "Please select an Agent first!",
          "undeclared": "Undeclared"
        },
        "aiConfiguration": {
          "label": "AI Configuration [Alpha]"
        },
        "changeSetSummaryVariable": {
          "description": "Provides a summary of the files in a change set and their contents."
        },
        "discardCustomPrompt": {
          "tooltip": "Discard Customizations"
        },
        "enableAI": {
          "mdDescription": "‚ùó This setting allows you to access the latest AI capabilities (Alpha version).            \n            Please note that these features are in an alpha phase, which means they may             undergo changes and will be further improved. It is important to be aware that these features may generate            continuous requests to the language models (LLMs) you provide access to. This might incur costs that you            need to monitor closely. By enabling this option, you acknowledge these risks.            \n            **Please note! The settings below in this section will only take effect\n            once the main feature setting is enabled. After enabling the feature, you need to configure at least one            LLM provider below. Also see [the documentation](https://theia-ide.org/docs/user_ai/)**."
        },
        "languageModelRenderer": {
          "family": "Family",
          "languageModel": "Language Model",
          "maxOutputTokens": "Max Output Tokens",
          "minInputTokens": "Min Input Tokens",
          "purpose": "Purpose",
          "vendor": "Vendor"
        },
        "prefs": {
          "title": "‚ú® AI Features [Alpha]"
        },
        "promptTemplates": {
          "description": "Folder for storing customized prompt templates. If not customized the user config directory is used. Please consider to use a folder, which is            under version control to manage your variants of prompt templates."
        },
        "prompts": {
          "category": "Theia AI Prompt Templates"
        },
        "requestSettings": {
          "mdDescription": "Allows specifying custom request settings for multiple models.\n            Each setting consists of:\n            - `scope`: Defines when the setting applies:\n              - `modelId` (optional): The model ID to match\n              - `providerId` (optional): The provider ID to match (e.g., huggingface, openai, ollama, llamafile)\n              - `agentId` (optional): The agent ID to match\n            - `requestSettings`: Model-specific settings as key-value pairs\n            - `clientSettings`: Client-side message handling settings:\n              - `keepToolCalls` (boolean): Whether to keep tool calls in the context\n              - `keepThinking` (boolean): Whether to keep thinking messages\n            Settings are matched based on specificity (agent: 100, model: 10, provider: 1 points).\n            Refer to [our documentation](https://theia-ide.org/docs/user_ai/#custom-request-settings) for more information.",
          "title": "Custom Request Settings"
        },
        "showAllPrompts": {
          "label": "Show all prompts"
        },
        "templateSettings": {
          "selectVariant": "Select Variant:",
          "unavailableVariant": "The selected variant is no longer available"
        },
        "variable-contribution": {
          "builtInVariable": "Theia Built-in Variable",
          "currentAbsoluteFilePath": "The absolute path of the                 currently opened file. Please note that most agents will expect a relative file path (relative to the current workspace).",
          "currentFileContent": "The plain content of the                 currently opened file. This excludes the information where the content is coming from. Please note that most agents will work better with a relative file path                 (relative to the current workspace).",
          "currentRelativeDirPath": "The relative path of the directory                 containing the currently opened file.",
          "currentRelativeFilePath": "The relative path of the                 currently opened file.",
          "currentSelectedText": "The plain text that is currently selected in the                 opened file. This excludes the information where the content is coming from. Please note that most agents will work better with a relative file path                 (relative to the current workspace).",
          "dotRelativePath": "Short reference to the relative path of the                 currently opened file ('currentRelativeFilePath')."
        }
      },
      "google": {
        "apiKey": {
          "description": "Enter an API Key of your official Google AI (Gemini) Account. **Please note:** By using this preference the GOOGLE AI API key will be stored in clear text            on the machine running Theia. Use the environment variable `GOOGLE_API_KEY` to set the key securely."
        },
        "models": {
          "description": "Official Google Gemini models to use"
        }
      },
      "history": {
        "clear": {
          "tooltip": "Clear History of all agents"
        },
        "communication-card": {
          "request": "Request",
          "requestId": "Request ID",
          "response": "Response",
          "responseTime": "Response Time",
          "sessionId": "Session ID",
          "timestamp": "Timestamp"
        },
        "sortChronologically": {
          "tooltip": "Sort chronologically"
        },
        "sortReverseChronologically": {
          "tooltip": "Sort reverse chronologically"
        },
        "view": {
          "label": "AI Agent History [Alpha]",
          "noAgent": "No agent available.",
          "noAgentSelected": "No agent selected.",
          "noHistoryForAgent": "No history available for the selected agent '{0}'"
        }
      },
      "huggingFace": {
        "apiKey": {
          "mdDescription": "Enter an API Key for your Hugging Face Account. **Please note:** By using this preference the Hugging Face API key will be stored in clear text            on the machine running Theia. Use the environment variable `HUGGINGFACE_API_KEY` to set the key securely."
        },
        "models": {
          "description": "Hugging Face models to use"
        }
      },
      "ide": {
        "agent-description": "Configure AI agent settings including enablement, LLM selection, prompt template customization, and custom agent creation in the [AI Configuration View]({0}).",
        "model-selection-description": "Choose which Large Language Models (LLMs) are used by each AI agent in the [AI Configuration View]({0}).",
        "prompt-template-description": "Select prompt variants and customize prompt templates for AI agents in the [AI Configuration View]({0})."
      },
      "llamaFile": {
        "prefs": {
          "mdDescription": "This setting allows you to configure and manage LlamaFile models in Theia IDE.            \n            Each entry requires a user-friendly `name`, the file `uri` pointing to your LlamaFile, and the `port` on which it will run.            \n            To start a LlamaFile, use the \"Start LlamaFile\" command, which enables you to select the desired model.            \n            If you edit an entry (e.g., change the port), any running instance will stop, and you will need to manually start it again.            \n            [Learn more about configuring and managing LlamaFiles in the Theia IDE documentation](https://theia-ide.org/docs/user_ai/#llamafile-models).",
          "name": {
            "description": "The model name to use for this Llamafile."
          },
          "port": {
            "description": "The port to use to start the server."
          },
          "title": "‚ú® AI LlamaFile",
          "uri": {
            "description": "The file uri to the Llamafile."
          }
        },
        "start": "Start Llamafile",
        "stop": "Stop Llamafile"
      },
      "llamafile": {
        "error": {
          "noConfigured": "No Llamafiles configured.",
          "noRunning": "No Llamafiles running.",
          "startFailed": "Something went wrong during the llamafile start: {0}.\nFor more information, see the console.",
          "stopFailed": "Something went wrong during the llamafile stop: {0}.\nFor more information, see the console."
        }
      },
      "mcp": {
        "error": {
          "allServersRunning": "All MCP servers are already running.",
          "noRunningServers": "No MCP servers running.",
          "noServersConfigured": "No MCP servers configured.",
          "startFailed": "An error occurred while starting the MCP server."
        },
        "info": {
          "serverStarted": "MCP server \"{0}\" successfully started. Registered tools: {1}"
        },
        "servers": {
          "args": {
            "mdDescription": "An array of arguments to pass to the command.",
            "title": "Arguments for the command"
          },
          "autostart": {
            "mdDescription": "Automatically start this server when the frontend starts. Newly added servers are not immediately auto started, but on restart",
            "title": "Autostart"
          },
          "command": {
            "mdDescription": "The command used to start the MCP server, e.g., \"uvx\" or \"npx\".",
            "title": "Command to execute the MCP server"
          },
          "env": {
            "mdDescription": "Optional environment variables to set for the server, such as an API key.",
            "title": "Environment variables"
          },
          "mdDescription": "Configure MCP servers with command, arguments, optionally environment variables, and autostart (true by default). Each server is identified by a unique key, such as \"brave-search\" or \"filesystem\". To start a server, use the \"MCP: Start MCP Server\" command, which enables you to select the desired server. To stop a server, use the \"MCP: Stop MCP Server\" command. Please note that autostart will only take effect after a restart, you need to start a server manually for the first time.\nExample configuration:\n```{\n  \"brave-search\": {\n    \"command\": \"npx\",\n    \"args\": [\n      \"-y\",\n      \"@modelcontextprotocol/server-brave-search\"\n    ],\n    \"env\": {\n      \"BRAVE_API_KEY\": \"YOUR_API_KEY\"\n    },\n  },\n  \"filesystem\": {\n    \"command\": \"npx\",\n    \"args\": [\"-y\", \"@modelcontextprotocol/server-filesystem\", \"/Users/YOUR_USERNAME/Desktop\"],\n    \"env\": {\n      \"CUSTOM_ENV_VAR\": \"custom-value\"\n    },\n    \"autostart\": false\n  }\n}\n```",
          "title": "MCP Servers Configuration"
        },
        "start": {
          "label": "MCP: Start MCP Server"
        },
        "stop": {
          "label": "MCP: Stop MCP Server"
        }
      },
      "mcpConfiguration": {
        "arguments": "Arguments: ",
        "autostart": "Autostart: ",
        "command": "Command: ",
        "copiedAllList": "Copied all tools to clipboard (list of all tools)",
        "copiedAllSingle": "Copied all tools to clipboard (single prompt fragment with                                     all tools)",
        "copiedForPromptTemplate": "Copied all tools to clipboard for prompt template                                     (single prompt fragment with all tools)",
        "copyAllList": "Copy all (list of all tools)",
        "copyAllSingle": "Copy all for chat (single prompt fragment with all tools)",
        "copyForPrompt": "Copy tool (for chat or prompt template)",
        "copyForPromptTemplate": "Copy all for prompt template (single prompt fragment with all tools)",
        "disabled": "Disabled",
        "enabled": "Enabled",
        "environmentVariables": "Environment Variables: ",
        "noServers": "No MCP servers configured",
        "serverConfigurations": "MCP Server Configurations",
        "startServer": "Start Server",
        "stopServer": "Stop Server",
        "tools": "Tools: ",
        "widgetLabel": "MCP Servers"
      },
      "openai": {
        "apiKey": {
          "mdDescription": "Enter an API Key of your official OpenAI Account. **Please note:** By using this preference the Open AI API key will be stored in clear text on the machine running Theia. Use the environment variable `OPENAI_API_KEY` to set the key securely."
        },
        "customEndpoints": {
          "apiKey": {
            "title": "Either the key to access the API served at the given url or `true` to use the global OpenAI API key"
          },
          "apiVersion": {
            "title": "Either the version to access the API served at the given url in Azure or `true` to use the global OpenAI API version"
          },
          "developerMessageSettings": {
            "title": "Controls the handling of system messages: `user`, `system`, and `developer` will be used as a role, `mergeWithFollowingUserMessage` will prefix                         the following user message with the system message or convert the system message to user message if the next message is not a user message.                         `skip` will just remove the system message), defaulting to `developer`."
          },
          "enableStreaming": {
            "title": "Indicates whether the streaming API shall be used. `true` by default."
          },
          "id": {
            "title": "A unique identifier which is used in the UI to identify the custom model"
          },
          "mdDescription": "Integrate custom models compatible with the OpenAI API, for example via `vllm`. The required attributes are `model` and `url`.            \n            Optionally, you can            \n            - specify a unique `id` to identify the custom model in the UI. If none is given `model` will be used as `id`.            \n            - provide an `apiKey` to access the API served at the given url. Use `true` to indicate the use of the global OpenAI API key.            \n            - provide an `apiVersion` to access the API served at the given url in Azure. Use `true` to indicate the use of the global OpenAI API version.            \n            - set `developerMessageSettings` to one of `user`, `system`, `developer`, `mergeWithFollowingUserMessage`, or `skip` to control how the developer message is            included (where `user`, `system`, and `developer` will be used as a role, `mergeWithFollowingUserMessage` will prefix the following user message with the system            message or convert the system message to user message if the next message is not a user message. `skip` will just remove the system message).            Defaulting to `developer`.            \n            - specify `supportsStructuredOutput: false` to indicate that structured output shall not be used.            \n            - specify `enableStreaming: false` to indicate that streaming shall not be used.            \n            Refer to [our documentation](https://theia-ide.org/docs/user_ai/#openai-compatible-models-eg-via-vllm) for more information.",
          "modelId": {
            "title": "Model ID"
          },
          "supportsStructuredOutput": {
            "title": "Indicates whether the model supports structured output. `true` by default."
          },
          "url": {
            "title": "The Open AI API compatible endpoint where the model is hosted"
          }
        },
        "models": {
          "description": "Official OpenAI models to use"
        }
      },
      "promptTemplates": {
        "directories": {
          "title": "Workspace-specific Prompt Template Directories"
        },
        "extensions": {
          "description": "List of additional file extensions in prompt locations that are considered as prompt templates. '.prompttemplate' is always considered as a default.",
          "title": "Additional Prompt Template File Extensions"
        },
        "files": {
          "title": "Workspace-specific Prompt Template Files"
        }
      },
      "scanoss": {
        "changeSet": {
          "clean": "No Matches",
          "error": "Error: Rerun",
          "error-notification": "ScanOSS error encountered: {0}.",
          "scan": "Scan",
          "scanning": "Scanning...",
          "view-matches": "View Matches"
        },
        "mode": {
          "automatic": {
            "description": "Enable automatic scan of code snippets in chat views."
          },
          "description": "Configure the SCANOSS feature for analyzing code snippets in chat views. This will send a hash of suggested code snippets to the SCANOSS\nservice hosted by the [Software Transparency foundation](https://www.softwaretransparency.org/osskb) for analysis.",
          "manual": {
            "description": "User can manually trigger the scan by clicking the SCANOSS item in the chat view."
          },
          "off": {
            "description": "Feature is turned off completely."
          }
        },
        "snippet": {
          "dialog-header": "ScanOSS Results",
          "errored": "SCANOSS - Error - {0}",
          "file-name-heading": "Match found in {0}",
          "in-progress": "SCANOSS - Performing scan...",
          "match-count": "Found {0} match(es)",
          "matched": "SCANOSS - Found {0} match",
          "no-match": "SCANOSS - No match",
          "summary": "Summary"
        }
      },
      "session-settings-dialog": {
        "title": "Set Session Settings",
        "tooltip": "Set Session Settings"
      },
      "terminal": {
        "agent": {
          "description": "This agent provides assistance to write and execute arbitrary terminal commands.         Based on the user's request, it suggests commands and allows the user to directly paste and execute them in the terminal.         It accesses the current directory, environment and the recent terminal output of the terminal session to provide context-aware assistance"
        },
        "askAi": "Ask the AI",
        "askTerminalCommand": "Ask about a terminal command...",
        "hitEnterConfirm": "Hit enter to confirm",
        "howCanIHelp": "How can I help you?",
        "loading": "Loading",
        "systemPrompt": {
          "description": "Prompt for the AI Terminal Assistant"
        },
        "tryAgain": "Try again...",
        "useArrowsAlternatives": " or use ‚áÖ to show alternatives...",
        "userPrompt": {
          "description": "Prompt that contains the user request"
        }
      },
      "workspace": {
        "coderAgent": {
          "description": "An AI assistant integrated into Theia IDE, designed to assist software developers. This agent can access the users workspace, it can get a list of all available files         and folders and retrieve their content. Futhermore, it can suggest modifications of files to the user. It can therefore assist the user with coding tasks or other         tasks involving file changes."
        },
        "considerGitignore": {
          "description": "If enabled, excludes files/folders specified in a global .gitignore file (expected location is the workspace root).",
          "title": "Consider .gitignore"
        },
        "excludedPattern": {
          "description": "List of patterns (glob or regex) for files/folders to exclude.",
          "title": "Excluded File Patterns"
        },
        "workspaceAgent": {
          "description": "An AI assistant integrated into Theia IDE, designed to assist software developers. This agent can access the users workspace, it can get a list of all available files          and folders and retrieve their content. It cannot modify files. It can therefore answer questions about the current project, project files and source code in the          workspace, such as how to build the project, where to put source code, where to find specific code or configurations, etc."
        }
      }
    },
    "ai-chat-ui": {
      "open-history-tooltip": "Open AI history...",
      "open-settings-tooltip": "Open AI settings..."
    },
    "ai-ide": {
      "open-agent-settings-tooltip": "Open Agent settings..."
    },
    "callhierarchy": {
      "noCallers": "No callers have been detected.",
      "open": "Open Call Hierarchy"
    },
    "collaboration": {
      "collaborate": "Collaborate",
      "collaboration": "Collaboration",
      "collaborationWorkspace": "Collaboration Workspace",
      "connected": "Connected",
      "connectedSession": "Connected to a collaboration session",
      "copiedInvitation": "Invitation code copied to clipboard.",
      "copyAgain": "Copy Again",
      "createRoom": "Create New Collaboration Session",
      "creatingRoom": "Creating Session",
      "end": "End Collaboration Session",
      "endDetail": "Terminate the session, cease content sharing, and revoke access for others.",
      "enterCode": "Enter collaboration session code",
      "failedCreate": "Failed to create room: {0}",
      "failedJoin": "Failed to join room: {0}",
      "invite": "Invite Others",
      "inviteDetail": "Copy the invitation code for sharing it with others to join the session.",
      "joinRoom": "Join Collaboration Session",
      "joiningRoom": "Joining Session",
      "leave": "Leave Collaboration Session",
      "leaveDetail": "Disconnect from the current collaboration session and close the workspace.",
      "selectCollaboration": "Select collaboration option",
      "sharedSession": "Shared a collaboration session",
      "startSession": "Start or join collaboration session",
      "userWantsToJoin": "User '{0}' wants to join the collaboration room",
      "whatToDo": "What would you like to do with other collaborators?"
    },
    "core": {
      "about": {
        "compatibility": "{0} Compatibility",
        "defaultApi": "Default {0} API",
        "listOfExtensions": "List of extensions"
      },
      "common": {
        "closeAll": "Close All Tabs",
        "closeAllTabMain": "Close All Tabs in Main Area",
        "closeOtherTabMain": "Close Other Tabs in Main Area",
        "closeOthers": "Close Other Tabs",
        "closeRight": "Close Tabs to the Right",
        "closeTab": "Close Tab",
        "closeTabMain": "Close Tab in Main Area",
        "collapseAllTabs": "Collapse All Side Panels",
        "collapseBottomPanel": "Toggle Bottom Panel",
        "collapseLeftPanel": "Toggle Left Panel",
        "collapseRightPanel": "Toggle Right Panel",
        "collapseTab": "Collapse Side Panel",
        "showNextTabGroup": "Switch to Next Tab Group",
        "showNextTabInGroup": "Switch to Next Tab in Group",
        "showPreviousTabGroup": "Switch to Previous Tab Group",
        "showPreviousTabInGroup": "Switch to Previous Tab in Group",
        "toggleMaximized": "Toggle Maximized"
      },
      "copyInfo": "Open a file first to copy its path",
      "copyWarn": "Please use the browser's copy command or shortcut.",
      "cutWarn": "Please use the browser's cut command or shortcut.",
      "enhancedPreview": {
        "classic": "Display a simple preview of the tab with basic information.",
        "enhanced": "Display an enhanced preview of the tab with additional information.",
        "visual": "Display a visual preview of the tab."
      },
      "file": {
        "browse": "Browse"
      },
      "highlightModifiedTabs": "Controls whether a top border is drawn on modified (dirty) editor tabs or not.",
      "keybindingStatus": "{0} was pressed, waiting for more keys",
      "keyboard": {
        "choose": "Choose Keyboard Layout",
        "chooseLayout": "Choose a keyboard layout",
        "current": "(current: {0})",
        "currentLayout": " - current layout",
        "mac": "Mac Keyboards",
        "pc": "PC Keyboards",
        "tryDetect": "Try to detect the keyboard layout from browser information and pressed keys."
      },
      "navigator": {
        "clipboardWarn": "Access to the clipboard is denied. Check your browser's permission.",
        "clipboardWarnFirefox": "Clipboard API is not available. It can be enabled by '{0}' preference on '{1}' page. Then reload Theia. Note, it will allow FireFox getting full access to the system clipboard."
      },
      "offline": "Offline",
      "pasteWarn": "Please use the browser's paste command or shortcut.",
      "quitMessage": "Any unsaved changes will not be saved.",
      "resetWorkbenchLayout": "Reset Workbench Layout",
      "searchbox": {
        "close": "Close (Escape)",
        "next": "Next (Down)",
        "previous": "Previous (Up)"
      },
      "secondaryWindow": {
        "alwaysOnTop": "When enabled, the secondary window stays above all other windows, including those of different applications.",
        "description": "Sets the initial position and size of the extracted secondary window.",
        "fullSize": "The position and size of the extracted widget will be the same as the running Theia application.",
        "halfWidth": "The position and size of the extracted widget will be half the width of the running Theia application.",
        "originalSize": "The position and size of the extracted widget will be the same as the original widget."
      },
      "silentNotifications": "Controls whether to suppress notification popups.",
      "tabDefaultSize": "Specifies the default size for tabs.",
      "tabMaximize": "Controls whether to maximize tabs on double click.",
      "tabMinimumSize": "Specifies the minimum size for tabs.",
      "tabShrinkToFit": "Shrink tabs to fit available space."
    },
    "debug": {
      "addConfigurationPlaceholder": "Select workspace root to add configuration to",
      "breakpoint": "breakpoint",
      "compound-cycle": "Launch configuration '{0}' contains a cycle with itself",
      "continueAll": "Continue All",
      "copyExpressionValue": "Copy Expression Value",
      "dataBreakpoint": "data breakpoint",
      "debugVariableInput": "Set {0} Value",
      "entry": "entry",
      "exception": "exception",
      "functionBreakpoint": "function breakpoint",
      "goto": "goto",
      "instruction-breakpoint": "Instruction Breakpoint",
      "instructionBreakpoint": "instruction breakpoint",
      "missingConfiguration": "Dynamic configuration '{0}:{1}' is missing or not applicable",
      "pause": "pause",
      "pauseAll": "Pause All",
      "reveal": "Reveal",
      "step": "step",
      "threads": "Threads",
      "toggleTracing": "Enable/disable tracing communications with debug adapters"
    },
    "editor": {
      "diffEditor.wordWrap2": "Lines will wrap according to the `#editor.wordWrap#` setting.",
      "dirtyEncoding": "The file is dirty. Please save it first before reopening it with another encoding.",
      "editor.bracketPairColorization.enabled": "Controls whether bracket pair colorization is enabled or not. Use `#workbench.colorCustomizations#` to override the bracket highlight colors.",
      "editor.codeActions.triggerOnFocusChange": "Enable triggering `#editor.codeActionsOnSave#` when `#files.autoSave#` is set to `afterDelay`. Code Actions must be set to `always` to be triggered for window and focus changes.",
      "editor.detectIndentation": "Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.",
      "editor.inlayHints.enabled1": "Inlay hints are showing by default and hide when holding Ctrl+Alt",
      "editor.inlayHints.enabled2": "Inlay hints are hidden by default and show when holding Ctrl+Alt",
      "editor.inlayHints.fontFamily": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
      "editor.inlayHints.fontSize": "Controls font size of inlay hints in the editor. As default the `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
      "editor.inlineSuggest.edits.experimental.enabled": "Controls whether to enable experimental edits in inline suggestions.",
      "editor.inlineSuggest.edits.experimental.onlyShowWhenCloseToCursor": "Controls whether to only show inline suggestions when the cursor is close to the suggestion.",
      "editor.inlineSuggest.edits.experimental.useInterleavedLinesDiff": "Controls whether to enable experimental interleaved lines diff in inline suggestions.",
      "editor.inlineSuggest.edits.experimental.useMixedLinesDiff": "Controls whether to enable experimental edits in inline suggestions.",
      "editor.insertSpaces": "Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "editor.quickSuggestions": "Controls whether suggestions should automatically show up while typing. This can be controlled for typing in comments, strings, and other code. Quick suggestion can be configured to show as ghost text or with the suggest widget. Also be aware of the `#editor.suggestOnTriggerCharacters#`-setting which controls if suggestions are triggered by special characters.",
      "editor.suggestFontSize": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
      "editor.suggestLineHeight": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
      "editor.tabSize": "The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "formatOnSaveTimeout": "Timeout in milliseconds after which the formatting that is run on file save is cancelled.",
      "persistClosedEditors": "Controls whether to persist closed editor history for the workspace across window reloads.",
      "showAllEditors": "Show All Opened Editors",
      "splitHorizontal": "Split Editor Horizontal",
      "splitVertical": "Split Editor Vertical",
      "toggleStickyScroll": "Toggle Sticky Scroll"
    },
    "file-search": {
      "toggleIgnoredFiles": " (Press {0} to show/hide ignored files)"
    },
    "fileDialog": {
      "showHidden": "Show hidden files"
    },
    "fileSystem": {
      "fileResource": {
        "overWriteBody": "Do you want to overwrite the changes made to '{0}' on the file system?"
      }
    },
    "filesystem": {
      "copiedToClipboard": "Copied the download link to the clipboard.",
      "copyDownloadLink": "Copy Download Link",
      "dialog": {
        "initialLocation": "Go To Initial Location",
        "multipleItemMessage": "You can select only one item",
        "name": "Name:",
        "navigateBack": "Navigate Back",
        "navigateForward": "Navigate Forward",
        "navigateUp": "Navigate Up One Directory"
      },
      "fileResource": {
        "binaryFileQuery": "Opening it might take some time and might make the IDE unresponsive. Do you want to open '{0}' anyway?",
        "binaryTitle": "The file is either binary or uses an unsupported text encoding.",
        "largeFileTitle": "The file is too large ({0}).",
        "overwriteTitle": "The file '{0}' has been changed on the file system."
      },
      "filesExclude": "Configure glob patterns for excluding files and folders. For example, the file Explorer decides which files and folders to show or hide based on this setting.",
      "format": "Format:",
      "maxConcurrentUploads": "Maximum number of concurrent files to upload when uploading multiple files. 0 means all files will be uploaded concurrently.",
      "maxFileSizeMB": "Controls the max file size in MB which is possible to open.",
      "prepareDownload": "Preparing download...",
      "prepareDownloadLink": "Preparing download link...",
      "processedOutOf": "Processed {0} out of {1}",
      "replaceTitle": "Replace File",
      "uploadFailed": "An error occurred while uploading a file. {0}",
      "uploadFiles": "Upload Files...",
      "uploadedOutOf": "Uploaded {0} out of {1}"
    },
    "getting-started": {
      "apiComparator": "{0} API Compatibility",
      "newExtension": "Building a New Extension",
      "newPlugin": "Building a New Plugin",
      "startup-editor": {
        "welcomePage": "Open the Welcome page, with content to aid in getting started with {0} and extensions."
      }
    },
    "git": {
      "aFewSecondsAgo": "a few seconds ago",
      "addSignedOff": "Add Signed-off-by",
      "amendReuseMessage": "To reuse the last commit message, press 'Enter' or 'Escape' to cancel.",
      "amendRewrite": "Rewrite previous commit message. Press 'Enter' to confirm or 'Escape' to cancel.",
      "checkoutCreateLocalBranchWithName": "Create a new local branch with name: {0}. Press 'Enter' to confirm or 'Escape' to cancel.",
      "checkoutProvideBranchName": "Please provide a branch name. ",
      "checkoutSelectRef": "Select a ref to checkout or create a new local branch:",
      "cloneQuickInputLabel": "Please provide a Git repository location. Press 'Enter' to confirm or 'Escape' to cancel.",
      "cloneRepository": "Clone the Git repository: {0}. Press 'Enter' to confirm or 'Escape' to cancel.",
      "compareWith": "Compare With...",
      "compareWithBranchOrTag": "Pick a branch or tag to compare with the currently active {0} branch:",
      "diff": "Diff",
      "dirtyDiffLinesLimit": "Do not show dirty diff decorations, if editor's line count exceeds this limit.",
      "dropStashMessage": "Stash successfully removed.",
      "editorDecorationsEnabled": "Show git decorations in the editor.",
      "fetchPickRemote": "Pick a remote to fetch from:",
      "gitDecorationsColors": "Use color decoration in the navigator.",
      "mergeQuickPickPlaceholder": "Pick a branch to merge into the currently active {0} branch:",
      "missingUserInfo": "Make sure you configure your 'user.name' and 'user.email' in git.",
      "noHistoryForError": "There is no history available for {0}",
      "noPreviousCommit": "No previous commit to amend",
      "noRepositoriesSelected": "No repositories were selected.",
      "prepositionIn": "in",
      "repositoryNotInitialized": "Repository {0} is not yet initialized.",
      "stashChanges": "Stash changes. Press 'Enter' to confirm or 'Escape' to cancel.",
      "stashChangesWithMessage": "Stash changes with message: {0}. Press 'Enter' to confirm or 'Escape' to cancel.",
      "tabTitleIndex": "{0} (Index)",
      "tabTitleWorkingTree": "{0} (Working tree)",
      "toggleBlameAnnotations": "Toggle Blame Annotations"
    },
    "keybinding-schema-updater": {
      "deprecation": "Use `when` clause instead."
    },
    "keymaps": {
      "addKeybindingTitle": "Add Keybinding for {0}",
      "editKeybinding": "Edit Keybinding...",
      "editKeybindingTitle": "Edit Keybinding for {0}",
      "editWhenExpression": "Edit When Expression...",
      "editWhenExpressionTitle": "Edit When Expression for {0}",
      "keybinding": {
        "copy": "Copy Keybinding",
        "copyCommandId": "Copy Keybinding Command ID",
        "copyCommandTitle": "Copy Keybinding Command Title",
        "edit": "Edit Keybinding...",
        "editWhenExpression": "Edit Keybinding When Expression..."
      },
      "keybindingCollidesValidation": "keybinding currently collides",
      "requiredKeybindingValidation": "keybinding value is required",
      "resetKeybindingConfirmation": "Do you really want to reset this keybinding to its default value?",
      "resetKeybindingTitle": "Reset keybinding for {0}",
      "resetMultipleKeybindingsWarning": "If multiple keybindings exist for this command, all of them will be reset."
    },
    "localize": {
      "offlineTooltip": "Cannot connect to backend."
    },
    "markers": {
      "clearAll": "Clear All",
      "noProblems": "No problems have been detected in the workspace so far.",
      "tabbarDecorationsEnabled": "Show problem decorators (diagnostic markers) in the tab bars."
    },
    "memory-inspector": {
      "addressTooltip": "Memory location to display, an address or expression evaluating to an address",
      "ascii": "ASCII",
      "binary": "Binary",
      "byteSize": "Byte Size",
      "bytesPerGroup": "Bytes Per Group",
      "closeSettings": "Close Settings",
      "columns": "Columns",
      "command": {
        "createNewMemory": "Create New Memory Inspector",
        "createNewRegisterView": "Create New Register View",
        "followPointer": "Follow Pointer",
        "followPointerMemory": "Follow Pointer in Memory Inspector",
        "resetValue": "Reset Value",
        "showRegister": "Show Register in Memory Inspector",
        "viewVariable": "Show Variable in Memory Inspector"
      },
      "data": "Data",
      "decimal": "Decimal",
      "diff": {
        "label": "Diff: {0}"
      },
      "diff-widget": {
        "offset-label": "{0} Offset",
        "offset-title": "Bytes to offset the memory from {0}"
      },
      "editable": {
        "apply": "Apply Changes",
        "clear": "Clear Changes"
      },
      "endianness": "Endianness",
      "extraColumn": "Extra Column",
      "groupsPerRow": "Groups Per Row",
      "hexadecimal": "Hexadecimal",
      "length": "Length",
      "lengthTooltip": "Number of bytes to fetch, in decimal or hexadecimal",
      "memory": {
        "addressField": {
          "memoryReadError": "Enter an address or expression in the Location field."
        },
        "freeze": "Freeze Memory View",
        "hideSettings": "Hide Settings Panel",
        "readError": {
          "bounds": "Memory bounds exceeded, result will be truncated.",
          "noContents": "No memory contents currently available."
        },
        "readLength": {
          "memoryReadError": "Enter a length (decimal or hexadecimal number) in the Length field."
        },
        "showSettings": "Show Settings Panel",
        "unfreeze": "Unfreeze Memory View",
        "userError": "There was an error fetching memory."
      },
      "memoryCategory": "Memory Inspector",
      "memoryInspector": "Memory Inspector",
      "memoryTitle": "Memory",
      "octal": "Octal",
      "offset": "Offset",
      "offsetTooltip": "Offset to be added to the current memory location, when navigating",
      "provider": {
        "localsError": "Cannot read local variables. No active debug session.",
        "readError": "Cannot read memory. No active debug session.",
        "writeError": "Cannot write memory. No active debug session."
      },
      "register": "Register",
      "register-widget": {
        "filter-placeholder": "Filter (starts with)"
      },
      "registerReadError": "There was an error fetching registers.",
      "registers": "Registers",
      "toggleComparisonWidgetVisibility": "Toggle Comparison Widget Visibility",
      "utils": {
        "afterBytes": "You must load memory in both widgets you would like to compare. {0} has no memory loaded.",
        "bytesMessage": "You must load memory in both widgets you would like to compare. {0} has no memory loaded."
      }
    },
    "messages": {
      "notificationTimeout": "Informative notifications will be hidden after this timeout.",
      "toggleNotifications": "Toggle Notifications"
    },
    "mini-browser": {
      "typeUrl": "Type a URL"
    },
    "monaco": {
      "noSymbolsMatching": "No symbols matching",
      "typeToSearchForSymbols": "Type to search for symbols"
    },
    "navigator": {
      "autoReveal": "Auto Reveal",
      "clipboardWarn": "Access to the clipboard is denied. Check your browser's permission.",
      "clipboardWarnFirefox": "Clipboard API is not available. It can be enabled by '{0}' preference on '{1}' page. Then reload Theia. Note, it will allow FireFox getting full access to the system clipboard.",
      "refresh": "Refresh in Explorer",
      "reveal": "Reveal in Explorer",
      "toggleHiddenFiles": "Toggle Hidden Files"
    },
    "output": {
      "clearOutputChannel": "Clear Output Channel...",
      "closeOutputChannel": "Close Output Channel...",
      "hiddenChannels": "Hidden Channels",
      "hideOutputChannel": "Hide Output Channel...",
      "maxChannelHistory": "The maximum number of entries in an output channel.",
      "outputChannels": "Output Channels",
      "showOutputChannel": "Show Output Channel..."
    },
    "plugin": {
      "blockNewTab": "Your browser prevented opening of a new tab"
    },
    "plugin-dev": {
      "alreadyRunning": "Hosted instance is already running.",
      "debugInstance": "Debug Instance",
      "debugMode": "Using inspect or inspect-brk for Node.js debug",
      "debugPorts": {
        "debugPort": "Port to use for this server's Node.js debug"
      },
      "devHost": "Development Host",
      "failed": "Failed to run hosted plugin instance: {0}",
      "hostedPlugin": "Hosted Plugin",
      "hostedPluginRunning": "Hosted Plugin: Running",
      "hostedPluginStarting": "Hosted Plugin: Starting",
      "hostedPluginStopped": "Hosted Plugin: Stopped",
      "hostedPluginWatching": "Hosted Plugin: Watching",
      "instanceTerminated": "{0} has been terminated",
      "launchOutFiles": "Array of glob patterns for locating generated JavaScript files (`${pluginPath}` will be replaced by plugin actual path).",
      "noValidPlugin": "Specified folder does not contain valid plugin.",
      "notRunning": "Hosted instance is not running.",
      "pluginFolder": "Plugin folder is set to: {0}",
      "preventedNewTab": "Your browser prevented opening of a new tab",
      "restartInstance": "Restart Instance",
      "running": "Hosted instance is running at:",
      "select": "Select",
      "selectPath": "Select Path",
      "startInstance": "Start Instance",
      "starting": "Starting hosted instance server ...",
      "stopInstance": "Stop Instance",
      "unknownTerminated": "The instance has been terminated",
      "watchMode": "Run watcher on plugin under development"
    },
    "plugin-ext": {
      "authentication-main": {
        "loginTitle": "Login"
      },
      "plugins": "Plugins",
      "webviewTrace": "Controls communication tracing with webviews.",
      "webviewWarnIfUnsecure": "Warns users that webviews are currently deployed unsecurely."
    },
    "preferences": {
      "ai-features": "AI Features",
      "hostedPlugin": "Hosted Plugin",
      "toolbar": "Toolbar"
    },
    "preview": {
      "openByDefault": "Open the preview instead of the editor by default."
    },
    "property-view": {
      "created": "Created",
      "directory": "Directory",
      "lastModified": "Last modified",
      "location": "Location",
      "noProperties": "No properties available.",
      "properties": "Properties",
      "symbolicLink": "Symbolic link"
    },
    "scm": {
      "amend": "Amend",
      "amendHeadCommit": "HEAD Commit",
      "amendLastCommit": "Amend last commit",
      "changeRepository": "Change Repository...",
      "config.untrackedChanges": "Controls how untracked changes behave.",
      "config.untrackedChanges.hidden": "hidden",
      "config.untrackedChanges.mixed": "mixed",
      "config.untrackedChanges.separate": "separate",
      "dirtyDiff": {
        "close": "Close Change Peek View"
      },
      "history": "History",
      "noRepositoryFound": "No repository found",
      "unamend": "Unamend",
      "unamendCommit": "Unamend commit"
    },
    "search-in-workspace": {
      "includeIgnoredFiles": "Include Ignored Files",
      "noFolderSpecified": "You have not opened or specified a folder. Only open files are currently searched.",
      "resultSubset": "This is only a subset of all results. Use a more specific search term to narrow down the result list.",
      "searchOnEditorModification": "Search the active editor when modified."
    },
    "secondary-window": {
      "extract-widget": "Move View to Secondary Window"
    },
    "shell-area": {
      "secondary": "Secondary Window"
    },
    "task": {
      "attachTask": "Attach Task...",
      "clearHistory": "Clear History",
      "noTaskToRun": "No task to run found. Configure Tasks..."
    },
    "terminal": {
      "defaultProfile": "The default profile used on {0}",
      "enableCopy": "Enable ctrl-c (cmd-c on macOS) to copy selected text",
      "enablePaste": "Enable ctrl-v (cmd-v on macOS) to paste from clipboard",
      "profileArgs": "The shell arguments that this profile uses.",
      "profileColor": "A terminal theme color ID to associate with the terminal.",
      "profileDefault": "Choose Default Profile...",
      "profileIcon": "A codicon ID to associate with the terminal icon.\nterminal-tmux:\"$(terminal-tmux)\"",
      "profileNew": "New Terminal (With Profile)...",
      "profilePath": "The path of the shell that this profile uses.",
      "profiles": "The profiles to present when creating a new terminal. Set the path property manually with optional args.\nSet an existing profile to `null` to hide the profile from the list, for example: `\"{0}\": null`.",
      "rendererType": "Controls how the terminal is rendered.",
      "rendererTypeDeprecationMessage": "The renderer type is no longer supported as an option.",
      "selectProfile": "Select a profile for the new terminal",
      "shell.deprecated": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in 'terminal.integrated.profiles.{0}' and setting its profile name as the default in 'terminal.integrated.defaultProfile.{0}.'",
      "shellArgsLinux": "The command line arguments to use when on the Linux terminal.",
      "shellArgsOsx": "The command line arguments to use when on the macOS terminal.",
      "shellArgsWindows": "The command line arguments to use when on the Windows terminal.",
      "shellLinux": "The path of the shell that the terminal uses on Linux (default: '{0}'}).",
      "shellOsx": "The path of the shell that the terminal uses on macOS (default: '{0}'}).",
      "shellWindows": "The path of the shell that the terminal uses on Windows. (default: '{0}')."
    },
    "test": {
      "cancelAllTestRuns": "Cancel All Test Runs",
      "stackFrameAt": "at",
      "testRunDefaultName": "{0} run {1}",
      "testRuns": "Test Runs"
    },
    "toolbar": {
      "addCommand": "Add Command to Toolbar",
      "addCommandPlaceholder": "Find a command to add to the toolbar",
      "centerColumn": "Center Column",
      "failedUpdate": "Failed to update the value of '{0}' in '{1}'.",
      "filterIcons": "Filter Icons",
      "iconSelectDialog": "Select an Icon for '{0}'",
      "iconSet": "Icon Set",
      "insertGroupLeft": "Insert Group Separator (Left)",
      "insertGroupRight": "Insert Group Separator (Right)",
      "leftColumn": "Left Column",
      "openJSON": "Customize Toolbar (Open JSON)",
      "removeCommand": "Remove Command From Toolbar",
      "restoreDefaults": "Restore Toolbar Defaults",
      "rightColumn": "Right Column",
      "selectIcon": "Select Icon",
      "toggleToolbar": "Toggle Toolbar",
      "toolbarLocationPlaceholder": "Where would you like the command added?",
      "useDefaultIcon": "Use Default Icon"
    },
    "typehierarchy": {
      "subtypeHierarchy": "Subtype Hierarchy",
      "supertypeHierarchy": "Supertype Hierarchy"
    },
    "variableResolver": {
      "listAllVariables": "Variable: List All"
    },
    "vsx-registry": {
      "confirmDialogMessage": "The extension \"{0}\" is unverified and might pose a security risk.",
      "confirmDialogTitle": "Are you sure you want to proceed with the installation?",
      "downloadCount": "Download count: {0}",
      "errorFetching": "Error fetching extensions.",
      "errorFetchingConfigurationHint": "This could be caused by network configuration issues.",
      "failedInstallingVSIX": "Failed to install {0} from VSIX.",
      "invalidVSIX": "The selected file is not a valid \"*.vsix\" plugin.",
      "license": "License: {0}",
      "onlyShowVerifiedExtensionsDescription": "This allows the {0} to only show verified extensions.",
      "onlyShowVerifiedExtensionsTitle": "Only Show Verified Extensions",
      "recommendedExtensions": "Do you want to install the recommended extensions for this repository?",
      "searchPlaceholder": "Search Extensions in {0}",
      "showInstalled": "Show Installed Extensions",
      "showRecommendedExtensions": "Controls whether notifications are shown for extension recommendations.",
      "vsx-extensions-contribution": {
        "update-version-uninstall-error": "Error while removing the extension: {0}.",
        "update-version-version-error": "Failed to install version {0} of {1}."
      }
    },
    "webview": {
      "goToReadme": "Go To README",
      "messageWarning": "            The {0} endpoint's host pattern has been changed to `{1}`; changing the pattern can lead to security vulnerabilities.             See `{2}` for more information."
    },
    "workspace": {
      "compareWithEachOther": "Compare with Each Other",
      "confirmDeletePermanently.description": "Failed to delete \"{0}\" using the Trash. Do you want to permanently delete instead?",
      "confirmDeletePermanently.solution": "You can disable the use of Trash in the preferences.",
      "confirmDeletePermanently.title": "Error deleting file",
      "confirmMessage.delete": "Do you really want to delete the following files?",
      "confirmMessage.dirtyMultiple": "Do you really want to delete {0} files with unsaved changes?",
      "confirmMessage.dirtySingle": "Do you really want to delete {0} with unsaved changes?",
      "confirmMessage.uriMultiple": "Do you really want to delete all the {0} selected files?",
      "confirmMessage.uriSingle": "Do you really want to delete {0}?",
      "duplicate": "Duplicate",
      "failSaveAs": "Cannot run \"{0}\" for the current widget.",
      "newFilePlaceholder": "File Name",
      "newFolderPlaceholder": "Folder Name",
      "noErasure": "Note: Nothing will be erased from disk",
      "openRecentPlaceholder": "Type the name of the workspace you want to open",
      "openRecentWorkspace": "Open Recent Workspace...",
      "preserveWindow": "Enable opening workspaces in current window.",
      "removeFolder": "Are you sure you want to remove the following folder from the workspace?",
      "removeFolders": "Are you sure you want to remove the following folders from the workspace?",
      "trashTitle": "Move {0} to Trash",
      "trustEmptyWindow": "Controls whether or not the empty workspace is trusted by default.",
      "trustEnabled": "Controls whether or not workspace trust is enabled. If disabled, all workspaces are trusted.",
      "trustRequest": "An extension requests workspace trust but the corresponding API is not yet fully supported. Do you want to trust this workspace?",
      "untitled-cleanup": "There appear to be many untitled workspace files. Please check {0} and remove any unused files.",
      "workspaceFolderAdded": "A workspace with multiple roots was created. Do you want to save your workspace configuration as a file?",
      "workspaceFolderAddedTitle": "Folder added to Workspace"
    }
  }
}
