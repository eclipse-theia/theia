name: CI/CD

on:
  push:
    branches:
      - master
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Use Node.js 20.x
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2
        with:
          node-version: 20.x
          registry-url: "https://registry.npmjs.org"

      - name: Use Python 3.11
        uses: actions/setup-python@b64ffcaf5b410884ad320a9cfac8866006a109aa # v4.8.0
        with:
          python-version: "3.11"

      - name: Install and Build
        shell: bash
        run: |
          npm ci
          ./scripts/check_git_status.sh
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # https://github.com/microsoft/vscode-ripgrep/issues/9

      - name: Lint
        run: |
          npm run lint

  build:
    name: Build and Test (${{ matrix.os }}, node-${{ matrix.node }})

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-22.04, macos-14]
        node: [20.x, 22.x]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

      - name: Use Node.js ${{ matrix.node }}
        uses: actions/setup-node@1a4442cacd436585916779262731d5b162bc6ec7 # v3.8.2
        with:
          node-version: ${{ matrix.node }}
          registry-url: "https://registry.npmjs.org"

      - name: Use Python 3.11
        uses: actions/setup-python@b64ffcaf5b410884ad320a9cfac8866006a109aa # v4.8.0
        with:
          python-version: "3.11"

      - name: Build
        shell: bash
        run: |
          npm ci
          npm run build
          git status
          ./scripts/check_git_status.sh
        env:
          NODE_OPTIONS: --max_old_space_size=4096
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # https://github.com/microsoft/vscode-ripgrep/issues/9

      - name: Download Plugins
        if: runner.os == 'Linux'
        shell: bash
        run: |
          npm run download:plugins -- --rate-limit 3

      - name: Test (headless)
        if: matrix.tests != 'skip'
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            ulimit -c unlimited
            sudo sysctl -w kernel.core_pattern=core
          fi
          npm run rebuild:browser
          npm run test:theia

      - name: Check git status on failure
        if: failure() && runner.os == 'Linux'
        shell: bash
        run: |
          echo "Git status after test failure:"
          git status
          echo "\nListing files in current directory:"
          ls -la
          echo "\nLooking for core files:"
          find . -name "core*" -type f 2>/dev/null || echo "No core files found"

      - name: Archive core dump
        if: failure() && runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: core-dump-${{ matrix.node }}
          path: |
            packages/core/core
            packages/core/core.*
          if-no-files-found: ignore

      - name: Test (browser)
        if: matrix.tests != 'skip' && runner.os == 'Linux'
        run: |
          xvfb-run -a npm run test:browser

      - name: Test (electron)
        if: matrix.tests != 'skip' && runner.os == 'Linux'
        run: |
          xvfb-run -a npm run test:electron
